// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compiler should compile simple template 1`] = `
"import * as RJT from "@react-json-templates/core";
type X = number;
export default async function (props) {
  const x: X = 5;
  return RJT.Component("S1", {
    children: [RJT.Component("S2", {
      x: x
    })]
  });
}"
`;

exports[`compiler should compile template with fragment 1`] = `
"import * as RJT from "@react-json-templates/core";
type X = number;
interface Y {
  foo: string;
}
export default async function (props) {
  const x: X = 5;
  const y = {
    foo: "bar"
  };
  return RJT.Fragment([RJT.Component("S1", {
    x: x
  }), RJT.Component("S2", {
    y: y
  })]);
}"
`;

exports[`compiler should compile template with js code  1`] = `
"import * as RJT from "@react-json-templates/core";
import T1 from "./T";
export default async function (props) {
  return T1({
    children: [RJT.Component("S1", {
      x: 0
    }), [1, 2, 3].map(item => RJT.Component("S1", {
      x: item
    }))]
  });
}"
`;

exports[`compiler should compile template with nested templates 1`] = `
"import * as RJT from "@react-json-templates/core";
import T1 from "./T";
type X = number;
interface Y {
  foo: string;
}
export default async function (props) {
  const x: X = 5;
  const y = {
    foo: "bar"
  };
  return T1({
    x: x,
    y: y,
    s: RJT.Component("S1", {
      x: x
    })
  });
}"
`;

exports[`compiler should compile template with string literals  1`] = `
"import * as RJT from "@react-json-templates/core";
import T1 from "./T";
export default async function (props) {
  return T1({
    children: ["Test", RJT.Component("S1", {})]
  });
}"
`;

exports[`compiler should compile template with unordered imports and types 1`] = `
"import * as RJT from "@react-json-templates/core";
import T1 from "./T";
type X = number;
interface Y {
  foo: string;
}
export default async function (props) {
  const x: X = 5;
  const y = {
    foo: "bar"
  };
  return T1({
    x: x,
    y: y
  });
}"
`;
